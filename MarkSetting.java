/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SMS;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import static java.awt.event.KeyEvent.VK_BACK_SPACE;
import static java.awt.event.KeyEvent.VK_DELETE;
import static java.awt.event.KeyEvent.VK_DOWN;
import static java.awt.event.KeyEvent.VK_ENTER;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.*;

/**
 *
 * @author Bina Computer
 */
public class MarkSetting extends javax.swing.JFrame {

    /**
     * Creates new form MarkSetting
     */
    Connection con;
    PreparedStatement pst1,pst2,pst3,pst4,pst5,pst6;
    public MarkSetting() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("Marks Setting");
        Image icon = Toolkit.getDefaultToolkit().getImage("C:\\Users\\Bina Computer\\Desktop\\project icon\\sms1.png");    
        setIconImage(icon); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        eng = new javax.swing.JTextField();
        nep = new javax.swing.JTextField();
        mat = new javax.swing.JTextField();
        sci = new javax.swing.JTextField();
        soc = new javax.swing.JTextField();
        com = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        mat1 = new javax.swing.JTextField();
        sci1 = new javax.swing.JTextField();
        soc1 = new javax.swing.JTextField();
        com1 = new javax.swing.JTextField();
        eng1 = new javax.swing.JTextField();
        nep1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel6.setText("Nepali");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel7.setText("Maths");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel8.setText("Science");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel10.setText("Social");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel11.setText("English");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel12.setText("Computer");

        eng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                engActionPerformed(evt);
            }
        });
        eng.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                engKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                engKeyTyped(evt);
            }
        });

        nep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nepActionPerformed(evt);
            }
        });
        nep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nepKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nepKeyTyped(evt);
            }
        });

        mat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                matKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                matKeyTyped(evt);
            }
        });

        sci.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sciKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sciKeyTyped(evt);
            }
        });

        soc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                socKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                socKeyTyped(evt);
            }
        });

        com.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                comKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("P.M");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("F.M");

        mat1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mat1ActionPerformed(evt);
            }
        });
        mat1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mat1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mat1KeyTyped(evt);
            }
        });

        sci1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sci1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sci1KeyTyped(evt);
            }
        });

        soc1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                soc1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                soc1KeyTyped(evt);
            }
        });

        com1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                com1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                com1KeyTyped(evt);
            }
        });

        eng1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eng1ActionPerformed(evt);
            }
        });
        eng1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                eng1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                eng1KeyTyped(evt);
            }
        });

        nep1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nep1ActionPerformed(evt);
            }
        });
        nep1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nep1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nep1KeyTyped(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Bina Computer\\Desktop\\project icon\\icons8-logout-rounded-down-30.png")); // NOI18N
        jButton3.setText("EXIT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Bina Computer\\Desktop\\project icon\\icons8-add-new-30.png")); // NOI18N
        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eng)
                            .addComponent(com, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(soc)
                            .addComponent(sci)
                            .addComponent(mat)
                            .addComponent(nep)))
                    .addComponent(jButton1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eng1)
                            .addComponent(com1)
                            .addComponent(soc1)
                            .addComponent(sci1)
                            .addComponent(mat1)
                            .addComponent(nep1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton3)))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sci1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(soc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(soc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(com, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(com1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(eng1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nep1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nep1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nep1KeyTyped
char c=evt.getKeyChar();
        if(c==KeyEvent.VK_ENTER)
        {
            mat1.requestFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_nep1KeyTyped

    private void nep1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nep1KeyPressed
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            nep1.setEditable(true);
        } else {
            nep1.setEditable(false);
            JOptionPane.showMessageDialog(this," Mark must be Integer");
            nep1.setEditable(true);
        } 
    }//GEN-LAST:event_nep1KeyPressed

    private void nep1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nep1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nep1ActionPerformed

    private void eng1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eng1KeyTyped
char c=evt.getKeyChar();
        if(c==KeyEvent.VK_ENTER)
        {
            nep1.requestFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_eng1KeyTyped

    private void eng1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eng1KeyPressed
     if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            eng1.setEditable(true);
        } else {
            eng1.setEditable(false);
            JOptionPane.showMessageDialog(this," Mark must be Integer");
            eng1.setEditable(true);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_eng1KeyPressed

    private void eng1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eng1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eng1ActionPerformed

    private void com1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_com1KeyTyped
         
        
        
         
    }//GEN-LAST:event_com1KeyTyped

    private void com1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_com1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            com1.setEditable(true);
        } else {
            com1.setEditable(false);
            JOptionPane.showMessageDialog(this," Mark must be Integer");
            com1.setEditable(true);
        } 
    }//GEN-LAST:event_com1KeyPressed

    private void soc1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_soc1KeyTyped
    char c=evt.getKeyChar();
        if(c==KeyEvent.VK_ENTER)
        {
            com1.requestFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_soc1KeyTyped

    private void soc1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_soc1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            soc1.setEditable(true);
        } else {
            soc1.setEditable(false);
            JOptionPane.showMessageDialog(this," Mark must be Integer");
            soc1.setEditable(true);
        } 
    }//GEN-LAST:event_soc1KeyPressed

    private void sci1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sci1KeyTyped
     char c=evt.getKeyChar();
        if(c==KeyEvent.VK_ENTER)
        {
            soc1.requestFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_sci1KeyTyped

    private void sci1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sci1KeyPressed
        // TODO add your handling code here:
        
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            sci1.setEditable(true);
        } else {
            sci1.setEditable(false);
            JOptionPane.showMessageDialog(this," Mark must be Integer");
            sci1.setEditable(true);
        } 
    }//GEN-LAST:event_sci1KeyPressed

    private void mat1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mat1KeyTyped
char c=evt.getKeyChar();
        if(c==KeyEvent.VK_ENTER)
        {
            sci1.requestFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_mat1KeyTyped

    private void mat1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mat1KeyPressed
     if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            mat1.setEditable(true);
        } else {
            mat1.setEditable(false);
            JOptionPane.showMessageDialog(this," Mark must be Integer");
            mat1.setEditable(true);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_mat1KeyPressed

    private void comKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comKeyTyped
     char c=evt.getKeyChar();
        if(c==KeyEvent.VK_ENTER)
        {
            eng1.requestFocus();
        }
    }//GEN-LAST:event_comKeyTyped

    private void comKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comKeyPressed
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            com.setEditable(true);
        } else {
            com.setEditable(false);
            JOptionPane.showMessageDialog(this,"mark must be Integer");
            com.setEditable(true);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_comKeyPressed

    private void socKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_socKeyTyped
        char c=evt.getKeyChar();
        if(c==KeyEvent.VK_ENTER)
        {
            com.requestFocus();
        }
    }//GEN-LAST:event_socKeyTyped

    private void socKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_socKeyPressed
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            soc.setEditable(true);
        } else {
            soc.setEditable(false);
            JOptionPane.showMessageDialog(this,"mark must be Integer");
            soc.setEditable(true);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_socKeyPressed

    private void sciKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sciKeyTyped
        char c=evt.getKeyChar();
        if(c==KeyEvent.VK_ENTER)
        {
            soc.requestFocus();
        }
    }//GEN-LAST:event_sciKeyTyped

    private void sciKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sciKeyPressed
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            sci.setEditable(true);
        } else {
            sci.setEditable(false);
            JOptionPane.showMessageDialog(this,"mark must be Integer");
            sci.setEditable(true);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_sciKeyPressed

    private void matKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_matKeyTyped
        char c=evt.getKeyChar();
        if(c==KeyEvent.VK_ENTER)
        {
            sci.requestFocus();
        }
    }//GEN-LAST:event_matKeyTyped

    private void matKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_matKeyPressed
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            mat.setEditable(true);
        } else {
            mat.setEditable(false);
            JOptionPane.showMessageDialog(this,"mark must be Integer");
            mat.setEditable(true);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_matKeyPressed

    private void nepKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nepKeyTyped
        char c=evt.getKeyChar();
        if(c==KeyEvent.VK_ENTER)
        {
            mat.requestFocus();
        }
    }//GEN-LAST:event_nepKeyTyped

    private void nepKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nepKeyPressed
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            nep.setEditable(true);
        } else {
            nep.setEditable(false);
            JOptionPane.showMessageDialog(this,"mark must be Integer");
            nep.setEditable(true);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_nepKeyPressed

    private void nepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nepActionPerformed

    private void engKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_engKeyTyped
        char c=evt.getKeyChar();
        int keyCode=evt.getKeyCode();
        if(c==KeyEvent.VK_ENTER||c==KeyEvent.VK_DOWN)
        {
            nep.requestFocus();
        }
//        if(keyCode==KeyEvent.VK_DOWN)
//        {
//           nep.requestFocus(); 
//        }
        
    }//GEN-LAST:event_engKeyTyped

    private void engKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_engKeyPressed
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'|| evt.getKeyChar()==VK_BACK_SPACE || evt.getKeyChar()==VK_DELETE||evt.getKeyChar()==VK_ENTER) {
            eng.setEditable(true);
        } else {
            eng.setEditable(false);
            JOptionPane.showMessageDialog(this," Mark must be Integer");
            eng.setEditable(true);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_engKeyPressed

    private void engActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_engActionPerformed
        //marksonstraint();
    }//GEN-LAST:event_engActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

      Float efm,nfm,mfm,sfm,sofm,cofm;
      Float epm,npm,mpm,spm,sopm,copm;
      //assigning full mark
      efm=Float.parseFloat(eng.getText());
      nfm=Float.parseFloat(nep.getText());
      mfm=Float.parseFloat(mat.getText());
      sfm=Float.parseFloat(sci.getText());
      sofm=Float.parseFloat(soc.getText());
      cofm=Float.parseFloat(com.getText());
      //assigning pass mark
       epm=Float.parseFloat(eng1.getText());
      npm=Float.parseFloat(nep1.getText());
      mpm=Float.parseFloat(mat1.getText());
      spm=Float.parseFloat(sci1.getText());
      sopm=Float.parseFloat(soc1.getText());
      copm=Float.parseFloat(com1.getText());
      
      if(eng.getText().length()==0||nep.getText().length()==0||mat.getText().length()==0||sci.getText().length()==0||soc.getText().length()==0||com.getText().length()==0||eng1.getText().length()==0||nep1.getText().length()==0||mat1.getText().length()==0||sci1.getText().length()==0||soc1.getText().length()==0||com1.getText().length()==0)
       {
                JOptionPane.showMessageDialog(this,"Enter marks in all field");
       }
      else if(epm>efm||npm>nfm||mpm>mfm||spm>sfm||sopm>sofm||copm>cofm)
      {
             JOptionPane.showMessageDialog(this,"pass mark must be less than full mark");
      }
      else
      {
          try
          {
             Class.forName("com.mysql.cj.jdbc.Driver");
             con=DriverManager.getConnection("jdbc:mysql://localhost/school","root","");
             String q1="update subdetail set fm=? ,pm=?  where subject=?";
             pst1=con.prepareStatement(q1);
             pst1.setFloat(1,efm);
             pst1.setFloat(2,epm);
             pst1.setString(3, "english");
             pst1.executeUpdate();
             
 
             pst2=con.prepareStatement(q1);
             pst2.setFloat(1,nfm);
             pst2.setFloat(2,npm);
             pst2.setString(3, "nepali");
             pst2.executeUpdate();
             
             pst3=con.prepareStatement(q1);
             pst3.setFloat(1,mfm);
             pst3.setFloat(2,mpm);
             pst3.setString(3, "maths");
             pst3.executeUpdate();
             
             pst4=con.prepareStatement(q1);
             pst4.setFloat(1,sfm);
             pst4.setFloat(2,spm);
             pst4.setString(3, "science");
             pst4.executeUpdate();
             
 
             pst5=con.prepareStatement(q1);
             pst5.setFloat(1,sofm);
             pst5.setFloat(2,sopm);
             pst5.setString(3, "social");
             pst5.executeUpdate();
             
             pst6=con.prepareStatement(q1);
             pst6.setFloat(1,cofm);
             pst6.setFloat(2,copm);
             pst6.setString(3, "computer");
             pst6.executeUpdate();
             JOptionPane.showMessageDialog(this,"updated Successfully");
             
             
          }
          catch(Exception e)
          {
              JOptionPane.showMessageDialog(this,"error due to "+e);
          }
      }
      
      

    }//GEN-LAST:event_jButton1ActionPerformed

    private void mat1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mat1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mat1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarkSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarkSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarkSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarkSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarkSetting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField com;
    private javax.swing.JTextField com1;
    private javax.swing.JTextField eng;
    private javax.swing.JTextField eng1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField mat;
    private javax.swing.JTextField mat1;
    private javax.swing.JTextField nep;
    private javax.swing.JTextField nep1;
    private javax.swing.JTextField sci;
    private javax.swing.JTextField sci1;
    private javax.swing.JTextField soc;
    private javax.swing.JTextField soc1;
    // End of variables declaration//GEN-END:variables
}
